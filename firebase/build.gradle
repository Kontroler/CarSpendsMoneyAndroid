apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    flavorDimensions "version"

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        dimension "version"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    productFlavors {
        dev {
            dimension "version"
        }
        prod {
            dimension "version"
        }
    }
}

dependencies {
    def deps = rootProject.ext

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation deps.kotlinStdLib
    implementation deps.coreKtx
    implementation deps.appcompat
    implementation deps.constraintLayout
    testImplementation deps.jUnit
    androidTestImplementation deps.testJUnit

    implementation deps.koinAndroid
    implementation deps.koinAndroidxScope
    implementation deps.koinAndroidxViewModel

    implementation deps.timber

    implementation deps.firebaseAuthKtx
    implementation deps.firebaseAnalytics
    implementation deps.firebaseDatabaseKtx
    implementation deps.firebaseFirestoreKtx
    implementation deps.kotlinxCoroutinesPlayServices

    implementation deps.rxJava
    implementation deps.rxJavaRxAndroid
    implementation deps.rxJavaRxKotlin

    //    Mapstruct-kotlin
    api deps.mapstructKotlin
    kapt deps.mapstructKotlinProcessor
}